@using CompanyManagement.Application.ProjectTask.Commands;
@model CompanyManagement.Application.Project.ProjectDto


@{
	ViewData["Title"] = "Details";
}


<a asp-controller="Department" asp-action="Index" class="btn btn-link mb-1">
	<i class="bi bi-arrow-left-short align-middle fs-2"></i>
</a>
<div class="d-flex flex-column mb-2">
	<div class="bg-primary text-white py-2 px-3">
		<h4>Project</h4>
	</div>
	<div class="flex bg-primary text-white bg-opacity-75 p-3 ">
		<h3>@Html.DisplayFor(model => model.Name)</h3>

		<a class="btn btn-outline-light" asp-controller="Department" asp-action="Edit" asp-route-Id="@Model.Id">
			<i class="bi bi-pencil-fill align-middle"></i> Edit
		</a>
	</div>
</div>
<div>
</div>
<div class="mt-4">
	<span class="fw-bold">@Html.DisplayNameFor(model => model.Description)</span>  @Html.DisplayFor(model => model.Description)
</div>
<div class="mt-2">
	<span class="fw-bold">@Html.DisplayNameFor(model => model.Status)</span>  @Html.DisplayFor(model => model.Status)
</div>

<div class="mt-4">
	<partial name="_CreateProjectTask" model="new CreateProjectTaskCommand() {Id=Model.Id}" />
</div>


<div class="my-4">
	<div id="tasks" class="column" data-id="@Model.Id"></div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
		<script src="~/js/Project/Details.js"></script>
	}
}
