@using CompanyManagement.Application.Project.Commands;
@using CompanyManagement.Application.Project.Commands.CreateProject;
@model CompanyManagement.Application.Department.DepartmentDto

@{
	ViewData["Title"] = "Details";
}


<a asp-controller="Department" asp-action="Index" class="btn btn-link mb-1">
	<i class="bi bi-arrow-left-short align-middle fs-2"></i>
</a>

<div class="d-flex flex-row justify-content-between mt-2 text-light p-4 rounded-3" style="background-color: rgba(12, 151, 247, 1);
background-image: linear-gradient(0deg, rgba(12, 151, 247, 1) 0%, rgba(98, 183, 235, 1) 100%);">
	<div class="d-flex flex-column">
		<h6>Department</h6>
		<h1>@Model.Name</h1>
		<h3> @Html.DisplayFor(model => model.Description)</h3>
	</div>
	@if (Model.IsEditable)
	{
		<div class="d-flex flex-column">
			<a class="btn btn-outline-light" asp-controller="Department" asp-action="Edit" asp-route-Id="@Model.Id">
				<i class="bi bi-pencil-fill align-middle"></i> Edit
			</a>
		</div>
	}
</div>
<div class="my-4">
	<h3>Projects</h3>
	<partial name="CreateProject" model="new CreateProjectCommand() { DepartmentId = Model.Id }" />

	<div class="my-4">
		<div id="projects" class="column" data-id="@Model.Id"></div>
	</div>
</div>



@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
		<script src="~/js/Department/Details.js"></script>
	}
}
